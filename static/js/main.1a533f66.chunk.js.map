{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","totalSupply","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","call","console","log","connectFailed","updateAccount","Screen","styled","div","image","SpacerXSmall","SpacerSmall","SpacerMedium","SpacerLarge","Container","flex","fd","jc","ai","test","TextTitle","p","TextDescription","StyledButton","button","StyledRoundButton","ResponsiveWrapper","StyledLogo","img","StyledImg","HeaderImg","StyledLink","App","input","len","useDispatch","useSelector","useState","claimingNft","setClaimingNft","feedback","setFeedback","mintAmount","setMintAmount","CONTRACT_ADDRESS","SCAN_LINK","NETWORK","NAME","SYMBOL","ID","NFT_NAME","MAX_SUPPLY","WEI_COST","DISPLAY_COST","GAS_LIMIT","MARKETPLACE","MARKETPLACE_LINK","SHOW_BACKGROUND","CONFIG","SET_CONFIG","getData","getConfig","fetch","headers","Accept","configResponse","json","config","useEffect","style","padding","backgroundColor","alt","src","width","textAlign","color","borderRadius","border","boxShadow","fontSize","fontWeight","target","href","length","substring","Number","onClick","e","preventDefault","abiResponse","abi","window","ethereum","isMetaMask","Web3EthContract","setProvider","Web3","request","method","accounts","SmartContractObj","on","location","reload","lineHeight","disabled","newMintAmount","decrementMintAmount","incrementMintAmount","gasLimit","totalCostWei","String","totalGasLimit","mint","send","to","from","value","once","err","then","receipt","claimNFTs","transform","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1a533f66.chunk.js","sourcesContent":["const initialState = {\n  loading: false,\n  account: null,\n  smartContract: null,\n  web3: null,\n  errorMsg: \"\",\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        account: action.payload.account,\n        smartContract: action.payload.smartContract,\n        web3: action.payload.web3,\n      };\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;\n","const initialState = {\n  loading: false,\n  totalSupply: 0,\n  cost: 0,\n  error: false,\n  errorMsg: \"\",\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        totalSupply: action.payload.totalSupply,\n        // cost: action.payload.cost,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\nexport const fetchData = () => {\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    try {\n      let totalSupply = await store\n        .getState()\n        .blockchain.smartContract.methods.totalSupply()\n        .call();\n      // let cost = await store\n      //   .getState()\n      //   .blockchain.smartContract.methods.cost()\n      //   .call();\n\n      dispatch(\n        fetchDataSuccess({\n          totalSupply,\n          // cost,\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};\n","// constants\nimport Web3EthContract from \"web3-eth-contract\";\nimport Web3 from \"web3\";\n// log\nimport { fetchData } from \"../data/dataActions\";\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload) => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload,\n  };\n};\n\nexport const connect = () => {\n  return async (dispatch) => {\n    dispatch(connectRequest());\n    const abiResponse = await fetch(\"/config/abi.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const abi = await abiResponse.json();\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const CONFIG = await configResponse.json();\n    const { ethereum } = window;\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\n    if (metamaskIsInstalled) {\n      Web3EthContract.setProvider(ethereum);\n      let web3 = new Web3(ethereum);\n      try {\n        const accounts = await ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const networkId = await ethereum.request({\n          method: \"net_version\",\n        });\n        if (networkId == CONFIG.NETWORK.ID) {\n          const SmartContractObj = new Web3EthContract(\n            abi,\n            CONFIG.CONTRACT_ADDRESS\n          );\n          dispatch(\n            connectSuccess({\n              account: accounts[0],\n              smartContract: SmartContractObj,\n              web3: web3,\n            })\n          );\n          // Add listeners start\n          ethereum.on(\"accountsChanged\", (accounts) => {\n            dispatch(updateAccount(accounts[0]));\n          });\n          ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n          // Add listeners end\n        } else {\n          dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\n        }\n      } catch (err) {\n        dispatch(connectFailed(\"Something went wrong.\"));\n      }\n    } else {\n      dispatch(connectFailed(\"Install Metamask.\"));\n    }\n  };\n};\n\nexport const updateAccount = (account) => {\n  return async (dispatch) => {\n    dispatch(updateAccountRequest({ account: account }));\n    dispatch(fetchData(account));\n  };\n};\n","import styled from \"styled-components\";\n\n// Used for wrapping a page component\nexport const Screen = styled.div`\n  background-color: var(--primary);\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\n// Used for providing space between components\nexport const SpacerXSmall = styled.div`\n  height: 8px;\n  width: 8px;\n`;\n\n// Used for providing space between components\nexport const SpacerSmall = styled.div`\n  height: 16px;\n  width: 16px;\n`;\n\n// Used for providing space between components\nexport const SpacerMedium = styled.div`\n  height: 24px;\n  width: 24px;\n`;\n\n// Used for providing space between components\nexport const SpacerLarge = styled.div`\n  height: 32px;\n  width: 32px;\n`;\n\n// Used for providing a wrapper around a component\nexport const Container = styled.div`\n  display: flex;\n  flex: ${({ flex }) => (flex ? flex : 0)};\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\n  width: 100%;\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const TextTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 22px;\n  font-weight: 500;\n  line-height: 1.6;\n`;\n\nexport const TextSubTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 18px;\n  line-height: 1.6;\n`;\n\nexport const TextDescription = styled.p`\n  color: var(--primary-text);\n  font-size: 33px;\n  line-height: 1.15;\n  text-align: left;\n`;\n\nexport const StyledClickable = styled.div`\n  :active {\n    opacity: 0.6;\n  }\n`;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"./redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./redux/data/dataActions\";\nimport * as s from \"./styles/globalStyles\";\nimport styled from \"styled-components\";\n\nconst truncate = (input, len) =>\n  input.length > len ? `${input.substring(0, len)}...` : input;\n\nexport const StyledButton = styled.button`\n  padding: 10px;\n  border-radius: 50px;\n  border: none;\n  background-color: var(--secondary);\n  padding: 10px;\n  font-weight: bold;\n  color: var(--secondary-text);\n  width: 100px;\n  cursor: pointer;\n  box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const StyledRoundButton = styled.button`\n  padding: 10px;\n  border-radius: 100%;\n  border: none;\n  background-color: var(--primary);\n  padding: 10px;\n  font-weight: bold;\n  font-size: 15px;\n  color: var(--primary-text);\n  width: 30px;\n  height: 30px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const ResponsiveWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: stretched;\n  align-items: stretched;\n  width: 100%;\n  @media (min-width: 767px) {\n    flex-direction: row;\n  }\n`;\n\nexport const StyledLogo = styled.img`\n  width: 100%;\n  @media (min-width: 767px) {\n    width: 800px;\n  }\n  transition: width 0.5s;\n  transition: height 0.5s;\n`;\n\nexport const StyledImg = styled.img`\n  box-shadow: 0px 5px 11px 2px rgba(0, 0, 0, 0.7);\n  border: 4px solid var(--secondary);\n  background-color: var(--accent);\n  border-radius: 0%;\n  width: 300px;\n  @media (min-width: 900px) {\n    width: 300px;\n  }\n  @media (min-width: 1000px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n`;\n\nexport const HeaderImg = styled.img`\n  box-shadow: 0px 5px 11px 2px rgba(0, 0, 0, 0.7);\n  background-color: var(--accent);\n  width: 100%;\n  @media (min-width: 900px) {\n    width: 100%;\n  }\n  @media (min-width: 1000px) {\n    width: 100%;\n  }\n  transition: width 0.5s;\n`;\n\nexport const StyledLink = styled.a`\n  color: var(--secondary);\n  text-decoration: none;\n`;\n\nfunction App() {\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const data = useSelector((state) => state.data);\n  const [claimingNft, setClaimingNft] = useState(false);\n  const [feedback, setFeedback] = useState(`Click buy to mint your NFT.`);\n  const [mintAmount, setMintAmount] = useState(1);\n  const [CONFIG, SET_CONFIG] = useState({\n    CONTRACT_ADDRESS: \"\",\n    SCAN_LINK: \"\",\n    NETWORK: {\n      NAME: \"\",\n      SYMBOL: \"\",\n      ID: 0,\n    },\n    NFT_NAME: \"\",\n    SYMBOL: \"\",\n    MAX_SUPPLY: 1,\n    WEI_COST: 0,\n    DISPLAY_COST: 0,\n    GAS_LIMIT: 0,\n    MARKETPLACE: \"\",\n    MARKETPLACE_LINK: \"\",\n    SHOW_BACKGROUND: false,\n  });\n\n  const claimNFTs = () => {\n    let cost = CONFIG.WEI_COST;\n    let gasLimit = CONFIG.GAS_LIMIT;\n    let totalCostWei = String(cost * mintAmount);\n    let totalGasLimit = String(gasLimit * mintAmount);\n    console.log(\"Cost: \", totalCostWei);\n    console.log(\"Gas limit: \", totalGasLimit);\n    setFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\n    setClaimingNft(true);\n    blockchain.smartContract.methods\n      .mint(mintAmount)\n      .send({\n        gasLimit: String(totalGasLimit),\n        to: CONFIG.CONTRACT_ADDRESS,\n        from: blockchain.account,\n        value: totalCostWei,\n      })\n      .once(\"error\", (err) => {\n        console.log(err);\n        setFeedback(\"Sorry, something went wrong please try again later.\");\n        setClaimingNft(false);\n      })\n      .then((receipt) => {\n        console.log(receipt);\n        setFeedback(\n          `WOW, the ${CONFIG.NFT_NAME} is yours! go visit Opensea.io to view it.`\n        );\n        setClaimingNft(false);\n        dispatch(fetchData(blockchain.account));\n      });\n  };\n\n  const decrementMintAmount = () => {\n    let newMintAmount = mintAmount - 1;\n    if (newMintAmount < 1) {\n      newMintAmount = 1;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const incrementMintAmount = () => {\n    let newMintAmount = mintAmount + 1;\n    if (newMintAmount > 10) {\n      newMintAmount = 10;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const getData = () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n    }\n  };\n\n  const getConfig = async () => {\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const config = await configResponse.json();\n    SET_CONFIG(config);\n  };\n\n  useEffect(() => {\n    getConfig();\n  }, []);\n\n  useEffect(() => {\n    getData();\n  }, [blockchain.account]);\n\n  return (\n    <s.Screen>\n      <s.Container\n        flex={1}\n        ai={\"center\"}\n        style={{ padding: 24, backgroundColor: \"var(--primary)\" }}\n        image={CONFIG.SHOW_BACKGROUND ? \"/config/images/bg__.png\" : null}\n      >\n        <StyledLogo alt={\"logo\"} src={\"/config/images/logo.png\"} />\n        <s.SpacerSmall />\n        \n        <s.Container jc={\"center\"} ai={\"center\"} style={{ width: \"88%\" }}>\n            <HeaderImg\n              alt={\"example\"}\n              src={\"/config/images/degens.jpg\"}\n              \n            />       \n            </s.Container>\n\n            <s.TextDescription\n            style={{\n              textAlign: \"left\",\n              color: \"var(--primary-text)\",\n              width: \"88%\",\n            }}\n          >\nDeep State Degenerates, Volume 1 is the first PFP avatar collection from FCTBCT.\n            <s.SpacerLarge />\n  It is a collection of 11,111 avatars, for sale at .01111 ETH.             </s.TextDescription>\n        <ResponsiveWrapper flex={1} style={{ padding: 24 }} test>\n          <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\n            <StyledImg alt={\"example\"} src={\"/config/images/example.gif\"} />\n          </s.Container>\n          <s.SpacerLarge />\n          <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\n            <StyledImg alt={\"example\"} src={\"/config/images/example.gif\"} />\n          </s.Container>\n          <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\n            <StyledImg alt={\"example\"} src={\"/config/images/example.gif\"} />\n          </s.Container>\n          <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\n            <StyledImg alt={\"example\"} src={\"/config/images/example.gif\"} />\n          </s.Container>\n          </ResponsiveWrapper>\n        \n        \n        \n\n        \n        <ResponsiveWrapper flex={1} style={{ padding: 24 }} test>\n          <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\n            <StyledImg alt={\"example\"} src={\"/config/images/example.gif\"} />\n          </s.Container>\n          <s.SpacerLarge />\n          <s.Container\n            flex={2}\n            jc={\"center\"}\n            ai={\"center\"}\n            style={{\n              backgroundColor: \"var(--accent)\",\n              padding: 24,\n              borderRadius: 0,\n              border: \"4px dashed var(--secondary)\",\n              boxShadow: \"0px 5px 11px 2px rgba(0,0,0,0.7)\",\n            }}\n          >\n            <s.TextTitle\n              style={{\n                textAlign: \"center\",\n                fontSize: 50,\n                fontWeight: \"bold\",\n                color: \"var(--accent-text)\",\n              }}\n            >\n              {data.totalSupply} / {CONFIG.MAX_SUPPLY}\n            </s.TextTitle>\n            <s.TextDescription\n              style={{\n                textAlign: \"center\",\n                color: \"var(--primary-text)\",\n              }}\n            >\n              <StyledLink target={\"_blank\"} href={CONFIG.SCAN_LINK}>\n                {truncate(CONFIG.CONTRACT_ADDRESS, 15)}\n              </StyledLink>\n            </s.TextDescription>\n            <s.SpacerSmall />\n            {Number(data.totalSupply) >= CONFIG.MAX_SUPPLY ? (\n              <>\n                <s.TextTitle\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  The sale has ended.\n                </s.TextTitle>\n                <s.TextDescription\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  You can still find {CONFIG.NFT_NAME} on\n                </s.TextDescription>\n                <s.SpacerSmall />\n                <StyledLink target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\n                  {CONFIG.MARKETPLACE}\n                </StyledLink>\n              </>\n            ) : (\n              <>\n                <s.TextTitle\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  1 {CONFIG.SYMBOL} costs {CONFIG.DISPLAY_COST}{\" \"}\n                  {CONFIG.NETWORK.SYMBOL}.\n                </s.TextTitle>\n                <s.SpacerXSmall />\n                <s.TextDescription\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  Excluding gas fees.\n                </s.TextDescription>\n                <s.SpacerSmall />\n                {blockchain.account === \"\" ||\n                blockchain.smartContract === null ? (\n                  <s.Container ai={\"center\"} jc={\"center\"}>\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--accent-text)\",\n                      }}\n                    >\n                      Connect to the {CONFIG.NETWORK.NAME} network\n                    </s.TextDescription>\n                    <s.SpacerSmall />\n                    <StyledButton\n                      onClick={(e) => {\n                        e.preventDefault();\n                        dispatch(connect());\n                        getData();\n                      }}\n                    >\n                      CONNECT\n                    </StyledButton>\n                    {blockchain.errorMsg !== \"\" ? (\n                      <>\n                        <s.SpacerSmall />\n                        <s.TextDescription\n                          style={{\n                            textAlign: \"center\",\n                            color: \"var(--accent-text)\",\n                          }}\n                        >\n                          {blockchain.errorMsg}\n                        </s.TextDescription>\n                      </>\n                    ) : null}\n                  </s.Container>\n                ) : (\n                  <>\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--accent-text)\",\n                      }}\n                    >\n                      {feedback}\n                    </s.TextDescription>\n                    <s.SpacerMedium />\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                      <StyledRoundButton\n                        style={{ lineHeight: 0.4 }}\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          decrementMintAmount();\n                        }}\n                      >\n                        -\n                      </StyledRoundButton>\n                      <s.SpacerMedium />\n                      <s.TextDescription\n                        style={{\n                          textAlign: \"center\",\n                          color: \"var(--accent-text)\",\n                        }}\n                      >\n                        {mintAmount}\n                      </s.TextDescription>\n                      <s.SpacerMedium />\n                      <StyledRoundButton\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          incrementMintAmount();\n                        }}\n                      >\n                        +\n                      </StyledRoundButton>\n                    </s.Container>\n                    <s.SpacerSmall />\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                      <StyledButton\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          claimNFTs();\n                          getData();\n                        }}\n                      >\n                        {claimingNft ? \"BUSY\" : \"BUY\"}\n                      </StyledButton>\n                    </s.Container>\n                  </>\n                )}\n              </>\n            )}\n            <s.SpacerMedium />\n          </s.Container>\n          <s.SpacerLarge />\n          <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\n            <StyledImg\n              alt={\"example\"}\n              src={\"/config/images/example.gif\"}\n              style={{ transform: \"scaleX(-1)\" }}\n            />\n          </s.Container>\n        </ResponsiveWrapper>\n        <s.SpacerLarge />\n        <s.Container jc={\"center\"} ai={\"center\"} style={{ width: \"88%\" }}>\n            <HeaderImg\n              alt={\"example\"}\n              src={\"/config/images/origins.jpg\"}\n              \n            />       \n            </s.Container>\n\n        \n        <s.TextDescription\n            style={{\n              textAlign: \"left\",\n              color: \"var(--primary-text)\",\n              width: \"88%\",\n            }}\n          >\n\n\n\nFor Conspiracy Theorists, By Conspiracy Theorists (FCTBCT) is an educational DAO sitting at the intersection of hip hop, conspiracy theory, and spirituality. \n<s.SpacerLarge />\n\n\t\t\tWhat connects these three cultures is RABBIT HOLES. \n      <s.SpacerLarge />\n\n\t\t\tWhether it's the Podesta emails or the full nature of the Tuskegee experiments, a triple entendre from Daylyt or the Angela Davis vocal sample Primo used on the \"Mathematics\" chorus, or the relationship between the Pyramids at Giza and the Orion constellation, all of these involve diving down very deep, very rewarding rabbit holes. \n      <s.SpacerLarge />\n\n\t\t\tWe have noted that hip hop, whether Dead Prez, Jay-Z, Public Enemy, Immortal Technique, or Capital Steez leads to conspiracy theories and as Sam Tripoli has noted, conspiracy theories eventually lead people to spirituality. \n      <s.SpacerLarge />\n\n\t\t\tWe expect to be a major player in this intersection.\n\n        </s.TextDescription>\n\n        <s.Container jc={\"left\"} ai={\"left\"} style={{ width: \"88%\" }}>\n            <HeaderImg\n              alt={\"example\"}\n              src={\"/config/images/gratitude.jpg\"}\n              \n            />  \n\n        <s.TextDescription\n            style={{\n              textAlign: \"left\",\n              color: \"var(--primary-text)\",\n            }}\n          >\n\n{/* VISION */}\n\n<s.Container jc={\"center\"} ai={\"center\"} style={{ width: \"100%\" }}>\n            <HeaderImg\n              alt={\"example\"}\n              src={\"/config/images/vision.jpg\"}\n              \n            />       \n            </s.Container>    \n\n            We plan to utilize giveaways in a very different way than other projects. Rather than contributing to more spam of tagging and retweeting, we will reward those who are able to create the best threads, memes, and videos.\n\nThrough these giveaways, we incentivize the steel-manning of information outside the Overton window, lost to the sands of time, or improperly understood. As the information spreads, so does the value of the collection. \n\nExamples would include:\n<s.SpacerLarge />\n\n<ul>\n<li>\ntier 1 (officially declassified and sanctioned/accepted): Tonkin, reichstag, operation northwoods, project paperclip, epstein, \"UAPs,\" heart rate variability, Dogon tribe, illegal drone strikes\n</li>\n<s.SpacerLarge />\n\n<li>\ntier 2 (verifiable and robust circumstantial evidence, no official sanctioning): building 7, pedogate, thermite, Atlantis, non-local consciousness, origin of ayahuasca, the heart brain, remote viewing, area 51, global organ harvesting\n</li>\n<s.SpacerLarge />\n\n<li>\ntier 3 (disconnected circumstantial evidence, mocked and laughed at): secret space program, DMT realm, interdimensional lizards and mantids, flat Earth, moon landing hoax, annunaki, mark of the beast, tartaria, telepathy and psychic phenomena,numerology, astrology\n</li>\n<s.SpacerLarge />\n\n<li>\nsands of time: nazca lines, global Pyramids, gobekli tepe, underwater ruins, empires from the Merovingians to the Medicis, monetary history, rediscovery of linear perspective, the I ching, gematria\n</li>\n<s.SpacerLarge />\n\n<li>\nimproperly understood: Bitcoin, the science of MCing, 432hz tuning, natural healing\n</li>\n</ul>\n\n{/* DISTRIBUTION */}\n\n<s.Container jc={\"center\"} ai={\"center\"} style={{ width: \"100%\" }}>\n            <HeaderImg\n              alt={\"example\"}\n              src={\"/config/images/distribution.jpg\"}\n              \n            />       \n            </s.Container>      \n\n  The collection is stored on ARWeave for permanent storage. It is by far the best and most legit storage option on Earth and we are enormous fans of Sam. But don't take our word for it--<a href=\"https://twitter.com/Debussy100/status/1431357543604006917?s=20\">debussy</a> and <a href=\"https://twitter.com/jakethedegen/status/1431358270317334531?s=20\">jake</a> agree as well.          \n  <s.SpacerLarge />\n  1000 are kept for giveaways where we will be the innovators in the space and the final 111 will be kept to serve as the foundation for the permanent FCTBCT community treasury. \n  <s.SpacerLarge />\n  Do you see the recursion, the elegance, the triple entendre. Don't even ask us how. \n  <s.SpacerLarge />\n  While we could do the standard 10k/.08ETH, memento mori. The legacy of being the first 11,111/.01111ETH punchline with the 1111/111 haymaker and the 111.1 ETH total mint value room shaker is worth more than the extra 3 million USTT, by far. Bet. \n  <s.SpacerLarge />\n  BCTFCT.eth-- a DAO with 1111 1-1111. future volumes will have 10,000 only and giveaways will be conducted from the series 1 collection of the first 1111 ever minted. these 1111 are held in a publicly visible community wallet so that community verification of holdings is transparent. as this collection grows in value it will be used to back a future airdropped governance token that will allow the community to create new educational ventures for the purposes of uplifting and enlightening the world.\n  unofficial launch mentor: \"The NFT creator playbook is to stealth launch the first drop. Because whitelists are so easy to manipulate. If high demand, you can bet that scalpers will own most of it. So easy to bot farm any whitelist. Subsequent drops should favor the current collectors. That can’t be faked.\" https://twitter.com/beaniemaxi/status/1449785330983489538?s=21\n  <s.SpacerLarge />\n  \n  https://www.paradigm.xyz/2021/10/a-guide-to-designing-effective-nft-launches/\n  none of the team will be receiving any of that 1111. BCTFCT is for the children. \n  <s.SpacerLarge />\n  also the team has made a collective word is bond pledge to mint only 11 each because this is really all about you, not us. and if we keep this focus than 11 should be more than enough to make it to degen island with the fam.\n  <s.SpacerLarge />\n  we are believers in sneaking, in hiding, in getting over. this is the cloth we are cut from. from a time in graf writing, before \"street art,\" when your props were about getting up in a highly visible spot you weren't supposed to be able to get to. whether you call it street cred or hood famous, either way, it is something that a monetary value cannot be put on. it is what legends are made of. and of course it goes to the fine art as well, whether it's the modern banksy or l0m3z, or the historical pseudonyms or caravaggio or the bronte sisters.\n  <s.SpacerLarge />\n  for this reason, the choice for us is always obvious: the stealth mint. hidden, low-key, and offering the street cred of catching the mint and holding, the proof of you being up on game visible to everyone with your public address.\n\n  <s.Container jc={\"center\"} ai={\"center\"} style={{ width: \"100%\" }}>\n            <HeaderImg\n              alt={\"example\"}\n              src={\"/config/images/rarity.jpg\"}\n              \n            />       \n            </s.Container>      \n\n        we have worked hard to make our rarities well balanced like Protoss, Terrans, and Zergs. We are long-time minters ourselves, and know well the joy of minting an ultra-rare or ripping open a Jordan rookie (in our dreams). So we know how important it is for the long term success of the project that these traits are well thought out. Some projects have done a good job with these things but in a way that feels forced or arbitrary. We have matched our rarity traits to things that are truly rare. \n\n<s.Container jc={\"center\"} ai={\"center\"} style={{ width: \"100%\" }}>\n            <HeaderImg\n              alt={\"example\"}\n              src={\"/config/images/team.jpg\"}\n              \n            />       \n            </s.Container>\n\n\n            \nWe are a group of activists, artists, AI, asians, and aliens who have <a href=\"https://www.goodreads.com/quotes/48531-make-your-ego-porous-will-is-of-little-importance-complaining\">chosen to let the work speak for itself</a>.         <s.SpacerLarge />\nand remember, we're all beautiful in the metaverse anon. \n\n\n          </s.TextDescription>\n        </s.Container>\n      </s.Container>\n    </s.Screen>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport \"./styles/reset.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}